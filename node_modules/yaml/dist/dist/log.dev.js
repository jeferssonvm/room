'use strict';

function debug(logLevel) {
  var _console;

  for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    messages[_key - 1] = arguments[_key];
  }

  if (logLevel === 'debug') (_console = console).log.apply(_console, messages);
}

function warn(logLevel, warning) {
  if (logLevel === 'debug' || logLevel === 'warn') {
    // https://github.com/typescript-eslint/typescript-eslint/issues/7478
    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain
    if (typeof process !== 'undefined' && process.emitWarning) process.emitWarning(warning);else console.warn(warning);
  }
}

exports.debug = debug;
exports.warn = warn;