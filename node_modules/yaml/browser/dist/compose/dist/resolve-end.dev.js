"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveEnd = resolveEnd;

function resolveEnd(end, offset, reqSpace, onError) {
  var comment = '';

  if (end) {
    var hasSpace = false;
    var sep = '';
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = end[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var token = _step.value;
        var source = token.source,
            type = token.type;

        switch (type) {
          case 'space':
            hasSpace = true;
            break;

          case 'comment':
            {
              if (reqSpace && !hasSpace) onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');
              var cb = source.substring(1) || ' ';
              if (!comment) comment = cb;else comment += sep + cb;
              sep = '';
              break;
            }

          case 'newline':
            if (comment) sep += source;
            hasSpace = true;
            break;

          default:
            onError(token, 'UNEXPECTED_TOKEN', "Unexpected ".concat(type, " at node end"));
        }

        offset += source.length;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator["return"] != null) {
          _iterator["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  return {
    comment: comment,
    offset: offset
  };
}