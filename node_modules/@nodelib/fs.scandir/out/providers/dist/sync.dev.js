"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.readdir = exports.readdirWithFileTypes = exports.read = void 0;

var fsStat = require("@nodelib/fs.stat");

var constants_1 = require("../constants");

var utils = require("../utils");

var common = require("./common");

function read(directory, settings) {
  if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {
    return readdirWithFileTypes(directory, settings);
  }

  return readdir(directory, settings);
}

exports.read = read;

function readdirWithFileTypes(directory, settings) {
  var dirents = settings.fs.readdirSync(directory, {
    withFileTypes: true
  });
  return dirents.map(function (dirent) {
    var entry = {
      dirent: dirent,
      name: dirent.name,
      path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)
    };

    if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {
      try {
        var stats = settings.fs.statSync(entry.path);
        entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);
      } catch (error) {
        if (settings.throwErrorOnBrokenSymbolicLink) {
          throw error;
        }
      }
    }

    return entry;
  });
}

exports.readdirWithFileTypes = readdirWithFileTypes;

function readdir(directory, settings) {
  var names = settings.fs.readdirSync(directory);
  return names.map(function (name) {
    var entryPath = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);
    var stats = fsStat.statSync(entryPath, settings.fsStatSettings);
    var entry = {
      name: name,
      path: entryPath,
      dirent: utils.fs.createDirentFromStats(name, stats)
    };

    if (settings.stats) {
      entry.stats = stats;
    }

    return entry;
  });
}

exports.readdir = readdir;