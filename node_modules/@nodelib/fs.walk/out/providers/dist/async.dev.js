"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var async_1 = require("../readers/async");

var AsyncProvider =
/*#__PURE__*/
function () {
  function AsyncProvider(_root, _settings) {
    _classCallCheck(this, AsyncProvider);

    this._root = _root;
    this._settings = _settings;
    this._reader = new async_1["default"](this._root, this._settings);
    this._storage = [];
  }

  _createClass(AsyncProvider, [{
    key: "read",
    value: function read(callback) {
      var _this = this;

      this._reader.onError(function (error) {
        callFailureCallback(callback, error);
      });

      this._reader.onEntry(function (entry) {
        _this._storage.push(entry);
      });

      this._reader.onEnd(function () {
        callSuccessCallback(callback, _this._storage);
      });

      this._reader.read();
    }
  }]);

  return AsyncProvider;
}();

exports["default"] = AsyncProvider;

function callFailureCallback(callback, error) {
  callback(error);
}

function callSuccessCallback(callback, entries) {
  callback(null, entries);
}