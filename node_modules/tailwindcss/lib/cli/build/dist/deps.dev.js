// @ts-check
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _export(target, all) {
  for (var name in all) {
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}

_export(exports, {
  loadPostcss: function loadPostcss() {
    return _loadPostcss;
  },
  loadPostcssImport: function loadPostcssImport() {
    return _loadPostcssImport;
  },
  loadCssNano: function loadCssNano() {
    return _loadCssNano;
  },
  loadAutoprefixer: function loadAutoprefixer() {
    return _loadAutoprefixer;
  }
});

var _index = require("../../../peers/index.js");

function _loadPostcss() {
  // Try to load a local `postcss` version first
  try {
    return require("postcss");
  } catch (_unused) {}

  return (0, _index.lazyPostcss)();
}

function _loadPostcssImport() {
  // Try to load a local `postcss-import` version first
  try {
    return require("postcss-import");
  } catch (_unused2) {}

  return (0, _index.lazyPostcssImport)();
}

function _loadCssNano() {
  var options = {
    preset: ["default", {
      cssDeclarationSorter: false
    }]
  }; // Try to load a local `cssnano` version first

  try {
    return require("cssnano");
  } catch (_unused3) {}

  return (0, _index.lazyCssnano)()(options);
}

function _loadAutoprefixer() {
  // Try to load a local `autoprefixer` version first
  try {
    return require("autoprefixer");
  } catch (_unused4) {}

  return (0, _index.lazyAutoprefixer)();
}