"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeAlphaVariables = removeAlphaVariables;

/**
 * This function removes any uses of CSS variables used as an alpha channel
 *
 * This is required for selectors like `:visited` which do not allow
 * changes in opacity or external control using CSS variables.
 *
 * @param {import('postcss').Container} container
 * @param {string[]} toRemove
 */
function removeAlphaVariables(container, toRemove) {
  container.walkDecls(function (decl) {
    if (toRemove.includes(decl.prop)) {
      decl.remove();
      return;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = toRemove[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var varName = _step.value;

        if (decl.value.includes("/ var(".concat(varName, ")"))) {
          decl.value = decl.value.replace("/ var(".concat(varName, ")"), '');
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator["return"] != null) {
          _iterator["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  });
}