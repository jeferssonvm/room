"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _postcssSelectorParser = _interopRequireDefault(require("postcss-selector-parser"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * @template {string | import('postcss-selector-parser').Root} T
 *
 * Prefix all classes in the selector with the given prefix
 *
 * It can take either a string or a selector AST and will return the same type
 *
 * @param {string} prefix
 * @param {T} selector
 * @param {boolean} prependNegative
 * @returns {T}
 */
function _default(prefix, selector) {
  var prependNegative = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (prefix === '') {
    return selector;
  }
  /** @type {import('postcss-selector-parser').Root} */


  var ast = typeof selector === 'string' ? (0, _postcssSelectorParser["default"])().astSync(selector) : selector;
  ast.walkClasses(function (classSelector) {
    var baseClass = classSelector.value;
    var shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith('-');
    classSelector.value = shouldPlaceNegativeBeforePrefix ? "-".concat(prefix).concat(baseClass.slice(1)) : "".concat(prefix).concat(baseClass);
  });
  return typeof selector === 'string' ? ast.toString() : ast;
}