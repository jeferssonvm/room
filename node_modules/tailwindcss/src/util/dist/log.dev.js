"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dim = dim;
exports["default"] = void 0;

var _picocolors = _interopRequireDefault(require("picocolors"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var alreadyShown = new Set();

function log(type, messages, key) {
  if (typeof process !== 'undefined' && process.env.JEST_WORKER_ID) return;
  if (key && alreadyShown.has(key)) return;
  if (key) alreadyShown.add(key);
  console.warn('');
  messages.forEach(function (message) {
    return console.warn(type, '-', message);
  });
}

function dim(input) {
  return _picocolors["default"].dim(input);
}

var _default = {
  info: function info(key, messages) {
    log.apply(void 0, [_picocolors["default"].bold(_picocolors["default"].cyan('info'))].concat(_toConsumableArray(Array.isArray(key) ? [key] : [messages, key])));
  },
  warn: function warn(key, messages) {
    log.apply(void 0, [_picocolors["default"].bold(_picocolors["default"].yellow('warn'))].concat(_toConsumableArray(Array.isArray(key) ? [key] : [messages, key])));
  },
  risk: function risk(key, messages) {
    log.apply(void 0, [_picocolors["default"].bold(_picocolors["default"].magenta('risk'))].concat(_toConsumableArray(Array.isArray(key) ? [key] : [messages, key])));
  }
};
exports["default"] = _default;