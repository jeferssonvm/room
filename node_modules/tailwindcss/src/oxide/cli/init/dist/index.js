"use strict";
exports.__esModule = true;
exports.init = void 0;
var fs_1 = require("fs");
var path_1 = require("path");
function isESM() {
    var pkgPath = path_1["default"].resolve('./package.json');
    try {
        var pkg = JSON.parse(fs_1["default"].readFileSync(pkgPath, 'utf8'));
        return pkg.type && pkg.type === 'module';
    }
    catch (err) {
        return false;
    }
}
function init(args) {
    var _a;
    var messages = [];
    var isProjectESM = args['--ts'] || args['--esm'] || isESM();
    var syntax = args['--ts'] ? 'ts' : isProjectESM ? 'js' : 'cjs';
    var extension = args['--ts'] ? 'ts' : 'js';
    var tailwindConfigLocation = path_1["default"].resolve((_a = args['_'][1]) !== null && _a !== void 0 ? _a : "./tailwind.config." + extension);
    if (fs_1["default"].existsSync(tailwindConfigLocation)) {
        messages.push(path_1["default"].basename(tailwindConfigLocation) + " already exists.");
    }
    else {
        var stubContentsFile = fs_1["default"].readFileSync(args['--full']
            ? path_1["default"].resolve(__dirname, '../../../../stubs/config.full.js')
            : path_1["default"].resolve(__dirname, '../../../../stubs/config.simple.js'), 'utf8');
        var stubFile = fs_1["default"].readFileSync(path_1["default"].resolve(__dirname, "../../../../stubs/tailwind.config." + syntax), 'utf8');
        // Change colors import
        stubContentsFile = stubContentsFile.replace('../colors', 'tailwindcss/colors');
        // Replace contents of {ts,js,cjs} file with the stub {simple,full}.
        stubFile =
            stubFile
                .replace('__CONFIG__', stubContentsFile.replace('module.exports =', '').trim())
                .trim() + '\n\n';
        fs_1["default"].writeFileSync(tailwindConfigLocation, stubFile, 'utf8');
        messages.push("Created Tailwind CSS config file: " + path_1["default"].basename(tailwindConfigLocation));
    }
    if (messages.length > 0) {
        console.log();
        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {
            var message = messages_1[_i];
            console.log(message);
        }
    }
}
exports.init = init;
