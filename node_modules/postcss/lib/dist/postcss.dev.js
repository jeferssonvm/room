'use strict';

var CssSyntaxError = require('./css-syntax-error');

var Declaration = require('./declaration');

var LazyResult = require('./lazy-result');

var Container = require('./container');

var Processor = require('./processor');

var stringify = require('./stringify');

var fromJSON = require('./fromJSON');

var Document = require('./document');

var Warning = require('./warning');

var Comment = require('./comment');

var AtRule = require('./at-rule');

var Result = require('./result.js');

var Input = require('./input');

var parse = require('./parse');

var list = require('./list');

var Rule = require('./rule');

var Root = require('./root');

var Node = require('./node');

function postcss() {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins.length === 1 && Array.isArray(plugins[0])) {
    plugins = plugins[0];
  }

  return new Processor(plugins);
}

postcss.plugin = function plugin(name, initializer) {
  var warningPrinted = false;

  function creator() {
    // eslint-disable-next-line no-console
    if (console && console.warn && !warningPrinted) {
      warningPrinted = true; // eslint-disable-next-line no-console

      console.warn(name + ': postcss.plugin was deprecated. Migration guide:\n' + 'https://evilmartians.com/chronicles/postcss-8-plugin-migration');

      if (process.env.LANG && process.env.LANG.startsWith('cn')) {
        /* c8 ignore next 7 */
        // eslint-disable-next-line no-console
        console.warn(name + ': 里面 postcss.plugin 被弃用. 迁移指南:\n' + 'https://www.w3ctech.com/topic/2226');
      }
    }

    var transformer = initializer.apply(void 0, arguments);
    transformer.postcssPlugin = name;
    transformer.postcssVersion = new Processor().version;
    return transformer;
  }

  var cache;
  Object.defineProperty(creator, 'postcss', {
    get: function get() {
      if (!cache) cache = creator();
      return cache;
    }
  });

  creator.process = function (css, processOpts, pluginOpts) {
    return postcss([creator(pluginOpts)]).process(css, processOpts);
  };

  return creator;
};

postcss.stringify = stringify;
postcss.parse = parse;
postcss.fromJSON = fromJSON;
postcss.list = list;

postcss.comment = function (defaults) {
  return new Comment(defaults);
};

postcss.atRule = function (defaults) {
  return new AtRule(defaults);
};

postcss.decl = function (defaults) {
  return new Declaration(defaults);
};

postcss.rule = function (defaults) {
  return new Rule(defaults);
};

postcss.root = function (defaults) {
  return new Root(defaults);
};

postcss.document = function (defaults) {
  return new Document(defaults);
};

postcss.CssSyntaxError = CssSyntaxError;
postcss.Declaration = Declaration;
postcss.Container = Container;
postcss.Processor = Processor;
postcss.Document = Document;
postcss.Comment = Comment;
postcss.Warning = Warning;
postcss.AtRule = AtRule;
postcss.Result = Result;
postcss.Input = Input;
postcss.Rule = Rule;
postcss.Root = Root;
postcss.Node = Node;
LazyResult.registerPostcss(postcss);
module.exports = postcss;
postcss["default"] = postcss;