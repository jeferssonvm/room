"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.random = exports.customAlphabet = exports.nanoid = void 0;

var _crypto = _interopRequireDefault(require("crypto"));

var _index = require("../url-alphabet/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var random = function random(bytes) {
  return new Promise(function (resolve, reject) {
    _crypto["default"].randomFill(Buffer.allocUnsafe(bytes), function (err, buf) {
      if (err) {
        reject(err);
      } else {
        resolve(buf);
      }
    });
  });
};

exports.random = random;

var customAlphabet = function customAlphabet(alphabet) {
  var defaultSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 21;
  var mask = (2 << 31 - Math.clz32(alphabet.length - 1 | 1)) - 1;
  var step = Math.ceil(1.6 * mask * defaultSize / alphabet.length);

  var tick = function tick(id) {
    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultSize;
    return random(step).then(function (bytes) {
      var i = step;

      while (i--) {
        id += alphabet[bytes[i] & mask] || '';
        if (id.length === size) return id;
      }

      return tick(id, size);
    });
  };

  return function (size) {
    return tick('', size);
  };
};

exports.customAlphabet = customAlphabet;

var nanoid = function nanoid() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;
  return random(size).then(function (bytes) {
    var id = '';

    while (size--) {
      id += _index.urlAlphabet[bytes[size] & 63];
    }

    return id;
  });
};

exports.nanoid = nanoid;